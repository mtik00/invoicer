#!/usr/bin/env bash

# Check the folders ###########################################################
if [[ ! -d {{app_log_dir}} ]]; then
    echo "creating log dir"
    mkdir -p {{app_log_dir}}
    chown {{chown_socket}} {{app_log_dir}}/
fi

if [[ ! -d {{run_dir}} ]]; then
    echo "creating socket run dir"
    mkdir -p {{run_dir}}
    chown {{chown_socket}} {{run_dir}}
fi

if [[ ! -d {{nginx_www_dir}}/html ]]; then
    echo "creating html folder"
    mkdir -p {{nginx_www_dir}}/html
    chown {{chown_socket}} {{nginx_www_dir}}/html
fi
###############################################################################

if [[ ! -d instance ]]; then
    mkdir instance
fi

if [[ ! -e instance/env.sh ]]; then
    echo "creating instance env vars file"
    echo export SECRET_KEY=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1) > instance/env.sh
    chmod +x instance/env.sh
fi

# Check the nginx config files ################################################
if [[ ! -e {{nginx_upstream_file_path}} ]] || [[ `diff _build/invoicer-upstream.nginx {{nginx_upstream_file_path}}` ]]; then
    echo "deploying nginx upstream config"

    if [[ -e {{nginx_upstream_file_path}} ]]; then
        # Make a backup of the existing file.  This works because nginx only
        # looks for ".conf" files.
        today=`date +%Y-%m-%d-%H:%M:%S`
        mv {{nginx_upstream_file_path}} {{nginx_upstream_file_path}}.$today
    fi

    cp _build/invoicer-upstream.nginx {{nginx_upstream_file_path}}

    $(nginx -t > /dev/null 2>&1)
    if [[ ! "$?" -eq 0 ]]; then
        echo "nginx config file test failed!"
        exit 1
    fi

    systemctl restart nginx.service
else
    echo "no change detected in {{nginx_upstream_file_path}}"
fi

if [[ ! -e {{nginx_location_file_path}} ]] || [[ `diff _build/invoicer-location.nginx {{nginx_location_file_path}}` ]]; then
    echo "deploying nginx location config"

    if [[ -e {{nginx_location_file_path}} ]]; then
        # Make a backup of the existing file.  This works because nginx only
        # looks for ".conf" files.
        today=`date +%Y-%m-%d-%H:%M:%S`
        mv {{nginx_location_file_path}} {{nginx_location_file_path}}.$today
    fi

    cp _build/invoicer-location.nginx {{nginx_location_file_path}}

    $(nginx -t > /dev/null 2>&1)
    if [[ ! "$?" -eq 0 ]]; then
        echo "nginx config file test failed!"
        exit 1
    fi

    systemctl restart nginx.service
else
    echo "no change detected in {{nginx_location_file_path}}"
fi

# Check the service ###########################################################
if [[ ! -e {{service_path}}/{{service_name}} ]]; then
    echo "creating the service"
    cp _build/invoicer-systemd.service {{service_path}}/{{service_name}}
    chmod 755 {{service_path}}/{{service_name}}
    systemctl daemon-reload
    systemctl enable {{service_name}}
elif [[ -n `diff _build/invoicer-systemd.service {{service_path}}/{{service_name}}` ]]; then
    echo "deploying the service"
    cp _build/invoicer-systemd.service {{service_path}}/{{service_name}}
    chmod 755 {{service_path}}/{{service_name}}
    systemctl daemon-reload
else
    echo "no change detected in {{service_path}}/{{service_name}}"
fi

# Check fail2ban ##############################################################
fail2ban=0
paths=(fail2ban/filter.d/invoicer.local fail2ban/jail.d/local)
for fname in "${paths[@]}" ; do
    if [[ ! -e /etc/${fname} ]]; then
        echo "creating ${fname}"
        cp _build/${fname} /etc/${fname}
        ((fail2ban++))
    elif [[ -n `diff _build/${fname} /etc/${fname}` ]]; then
        echo "change detected in ${fname}"
        cp _build/${fname} /etc/${fname}
        ((fail2ban++))
    fi
done

if [[ "${fail2ban}" -gt "0" ]] ; then
    echo "restarting fail2ban"
    systemctl restart fail2ban.service
fi

# Set up our static files.
# NOTE: The folder will only ever have the static files so Nginx can serve them
# instead of passing the requests to our app.  Nginx is **much** better suited
# for this purpose.
echo "deploying static folder"
rm -rf {{nginx_www_dir}}/html/*
cp -r ./invoicer/static {{nginx_www_dir}}/html/
chown -R {{nginx_www_dir_owner}} {{nginx_www_dir}}/html
chmod -R {{nginx_www_dir_perms}} {{nginx_www_dir}}

# We always want to restart the service to pick up the code changes.
echo "restarting the service"
systemctl restart {{service_name}}
